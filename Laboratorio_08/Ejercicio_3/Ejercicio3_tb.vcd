$date
	Sat Oct 24 17:59:19 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! O [3:0] $end
$var wire 1 " C $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 3 % S [2:0] $end
$var integer 32 & i [31:0] $end
$scope module a1 $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 4 ) Out [3:0] $end
$var wire 3 * Select [2:0] $end
$var wire 5 + carry [4:0] $end
$var wire 1 " CarryOut $end
$var reg 4 , result [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1110 ,
b10000 +
b1 *
b1110 )
b110 (
b1010 '
b0 &
b1 %
b110 $
b1010 #
1"
b1110 !
$end
#10
b0 !
b0 )
b0 ,
b10 %
b10 *
b1 &
#20
b1111 !
b1111 )
b1111 ,
b11 %
b11 *
b10 &
#30
b1000 !
b1000 )
b1000 ,
b100 %
b100 *
b11 &
#40
b1011 !
b1011 )
b1011 ,
b101 %
b101 *
b100 &
#50
b100 !
b100 )
b100 ,
b110 %
b110 *
b101 &
#60
b0 !
b0 )
b0 ,
b111 %
b111 *
b110 &
#70
b10 !
b10 )
b10 ,
b0 %
b0 *
b111 &
#80
b0 !
b0 )
b0 ,
0"
b1010 +
b0 $
b0 (
b1000 &
